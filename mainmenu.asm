					; EXPORT MY SELF
PUBLIC MAIN_MENU
					; VARIABLE WHICH ARE DECLARED IN MAIN PROGRAM
					EXTRN MAIN_MENU_START_GAME_COLOR:BYTE
					EXTRN MAIN_MENU_CHAT_COLOR:BYTE
					EXTRN MAIN_MENU_QUIT_COLOR:BYTE
					EXTRN MAIN_MENU_CURRENT_STAT:BYTE
;---------------------------------------------------------------------------------------------------								
								.MODEL SMALL
								; CONSTANTS FOR USAGE

SCREEN_WIDTH                      EQU         1024
SCREEN_HEIGHT                     EQU         768
START_GAME_X                      EQU         (SCREEN_WIDTH/2)-(200)
START_GAME_Y                      EQU         (SCREEN_HEIGHT/2)-(125)
MAIN_MENU_CHAT_X                  EQU         (SCREEN_WIDTH/2)-(75)
MAIN_MENU_CHAT_Y                  EQU         (SCREEN_HEIGHT/2)-(25)
MAIN_MENU_QUIT_X                  EQU         (SCREEN_WIDTH/2)-(75)
MAIN_MENU_QUIT_Y                  EQU         (SCREEN_HEIGHT/2)+(75)
NOTIFICATIONS_BAR_LOCATION		  EQU		  (SCREEN_HEIGHT) - (SCREEN_HEIGHT / 10)

MAIN_MENU_STATIC_COLOR            EQU         3
MAIN_MENU_FOCUS_COLOR             EQU         5

            .CODE
MAIN_MENU    PROC    FAR

		; Activate Video mode
		MOV AX, 4F02H
		MOV BX, 105H			; FIRST ACTIVATE VIDEO MODE TO CLEAR SCREEN TO DRAW ON CLEAN GROUND
		INT 10H

		; CLEAN INPUT BUFFER SO THAT PREVIOUS ENTER PRESSED IN ENTRY SCREEN DOESN'T AFFECT THIS
		PUSH ES
		MOV AX, 0000H
		MOV ES, AX
		MOV ES:[041AH], 041EH
		MOV ES:[041CH], 041EH				; Clears keyboard buffer
		POP		ES

MAIN_MENU_LOOP:

		CALL ADJUST_FOCUS_COLOR

		CALL NOTIFICATIONS_BAR

        CALL MAIN_MENU_START_GAME

        CALL MAIN_MENU_CHAT

        CALL MAIN_MENU_QUIT
                                    ; SCAN CODE -> AH
        MOV AH, 0                   ; SCAN CODE ENTER -> 1CH
        INT 16H                     ; SCAN CODE DOWN ARROW -> 50H
                                    ; SCAN CODE UP ARROW -> 48H
        CMP AH, 1CH
        JE ENTER_PRESSED

        CMP AH, 50H
        JE DOWN_PRESSED

        CMP AH, 48H
        JE UP_PRESSED

        JMP MAIN_MENU_LOOP 

DOWN_PRESSED:
		INC MAIN_MENU_CURRENT_STAT
		MOV AL, MAIN_MENU_CURRENT_STAT
		CMP AL, 3
		JNE MAIN_MENU_LOOP
		MOV AL, 0
		MOV MAIN_MENU_CURRENT_STAT, AL
		JMP MAIN_MENU_LOOP

UP_PRESSED:
		MOV AL, MAIN_MENU_CURRENT_STAT
		CMP AL, 0
		JNE UP_PRESSED_FLAG
		MOV AL, 3
	UP_PRESSED_FLAG:
		DEC AL
		MOV MAIN_MENU_CURRENT_STAT, AL
		JMP MAIN_MENU_LOOP

ENTER_PRESSED:	; GO TO MAIN PROGRAM AND IT'LL HANDLE THE PROPER ACTION TO TAKE

        RET
MAIN_MENU    ENDP

ADJUST_FOCUS_COLOR		PROC	NEAR		; CHANGE COLOR BASED ON PREVIOUS USER INPUT
		MOV AL, MAIN_MENU_CURRENT_STAT

		MOV MAIN_MENU_START_GAME_COLOR, MAIN_MENU_STATIC_COLOR
		MOV MAIN_MENU_CHAT_COLOR, MAIN_MENU_STATIC_COLOR		; MAKE THEM ALL STATIC TO NOT REPEAT IT IN EVERY OPTION
		MOV MAIN_MENU_QUIT_COLOR, MAIN_MENU_STATIC_COLOR

		CMP AL, 0
		JNE NOT_START_GAME
		MOV MAIN_MENU_START_GAME_COLOR, MAIN_MENU_FOCUS_COLOR	; START GAME HAS FOCUS
		JMP ADJUST_FOCUS_COLOR_END

NOT_START_GAME:

		CMP AL, 1
		JNE NOT_CHAT
		MOV MAIN_MENU_CHAT_COLOR, MAIN_MENU_FOCUS_COLOR		; CHAT HAS FOCUS
		JMP ADJUST_FOCUS_COLOR_END

NOT_CHAT:
		; ONLY 1 OPTION LEFT -> QUIT
		MOV MAIN_MENU_QUIT_COLOR, MAIN_MENU_FOCUS_COLOR		; QUIT HAS FOCUS


ADJUST_FOCUS_COLOR_END:

		RET
ADJUST_FOCUS_COLOR		ENDP

NOTIFICATIONS_BAR		PROC	NEAR

		; DRAW THE NOTIFICATIONS LINE
		MOV DX, NOTIFICATIONS_BAR_LOCATION
		MOV AL, 15
		MOV AH, 0CH
		MOV CX, SCREEN_WIDTH
		NOTIFICATIONS_BAR_LOOP:
			INT 10H
			LOOP NOTIFICATIONS_BAR_LOOP

		RET
NOTIFICATIONS_BAR		ENDP

MAIN_MENU_START_GAME      PROC    NEAR
        MOV AL, MAIN_MENU_START_GAME_COLOR

        CALL MAIN_START_S1
        CALL MAIN_START_T1
        CALL MAIN_START_A1
        CALL MAIN_START_R1
        CALL MAIN_START_T2

        CALL MAIN_START_G1
        CALL MAIN_START_A2
        CALL MAIN_START_M1
        CALL MAIN_START_E1

        RET
MAIN_MENU_START_GAME      ENDP

MAIN_MENU_CHAT      PROC    NEAR
        MOV AL, MAIN_MENU_CHAT_COLOR

        CALL MAIN_CHAT_C
        CALL MAIN_CHAT_H
        CALL MAIN_CHAT_A
        CALL MAIN_CHAT_T

        RET
MAIN_MENU_CHAT      ENDP

MAIN_MENU_QUIT      PROC    NEAR
        MOV AL, MAIN_MENU_QUIT_COLOR

        CALL MAIN_QUIT_Q
        CALL MAIN_QUIT_U
        CALL MAIN_QUIT_I
        CALL MAIN_QUIT_T

        RET
MAIN_MENU_QUIT      ENDP

MAIN_START_S1		PROC	NEAR
		MOV AH, 0CH
		
		; TOP - OF S
		MOV CX, START_GAME_X
		MAIN_START_S1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_S1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_S1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+30
			JNZ MAIN_START_S1_LOOP1_BIG
			
		; MIDDLE - OF S
		MOV CX, START_GAME_X
		MAIN_START_S1_LOOP2_BIG:
			MOV DX, START_GAME_Y+22
			MAIN_START_S1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+28
				JNZ MAIN_START_S1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+30
			JNZ MAIN_START_S1_LOOP2_BIG

		; BOT - OF S
		MOV CX, START_GAME_X
		MAIN_START_S1_LOOP3_BIG:
			MOV DX, START_GAME_Y+45
			MAIN_START_S1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_S1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+30
			JNZ MAIN_START_S1_LOOP3_BIG
			
		; LEFT | OF S
		MOV CX, START_GAME_X
		MAIN_START_S1_LOOP4_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_S1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+22
				JNZ MAIN_START_S1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+5
			JNZ MAIN_START_S1_LOOP4_BIG
			
		; RIGHT | OF S
		MOV CX, START_GAME_X+25
		MAIN_START_S1_LOOP5_BIG:
			MOV DX, START_GAME_Y+28
			MAIN_START_S1_LOOP5_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+45
				JNZ MAIN_START_S1_LOOP5_SML
			INC CX
			CMP CX, START_GAME_X+30
			JNZ MAIN_START_S1_LOOP5_BIG
			
			RET

MAIN_START_S1		ENDP

MAIN_START_T1		PROC	NEAR
		MOV AH, 0CH
		
		; - OF T
		MOV CX, START_GAME_X+40
		MAIN_START_T1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_T1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_T1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+70
			JNZ MAIN_START_T1_LOOP1_BIG
		
		; | OF T
		MOV CX, START_GAME_X+40+12
		MAIN_START_T1_LOOP2_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_T1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_T1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+40+18
			JNZ MAIN_START_T1_LOOP2_BIG
			
			RET
		
MAIN_START_T1		ENDP

MAIN_START_A1       PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF A
		MOV CX, START_GAME_X+80
		MAIN_START_A1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_A1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+85
			JNZ MAIN_START_A1_LOOP1_BIG
			
		; RIGHT | OF A
		MOV CX, START_GAME_X+105
		MAIN_START_A1_LOOP2_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_A1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+110
			JNZ MAIN_START_A1_LOOP2_BIG
			
		; TOP - OF A
		MOV CX, START_GAME_X+85
		MAIN_START_A1_LOOP3_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_A1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+85+20
			JNZ MAIN_START_A1_LOOP3_BIG
			
		; BOT - OF A
		MOV CX, START_GAME_X+85
		MAIN_START_A1_LOOP4_BIG:
			MOV DX, START_GAME_Y+30
			MAIN_START_A1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+35
				JNZ MAIN_START_A1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+85+20
			JNZ MAIN_START_A1_LOOP4_BIG

                    RET
MAIN_START_A1       ENDP

MAIN_START_R1       PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF R
		MOV CX, START_GAME_X+120
		MAIN_START_R1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_R1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_R1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+125
			JNZ MAIN_START_R1_LOOP1_BIG
			
		; TOP - OF R
		MOV CX, START_GAME_X+125
		MAIN_START_R1_LOOP2_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_R1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_R1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+150
			JNZ MAIN_START_R1_LOOP2_BIG
			
		; RIGHT | OF R
		MOV CX, START_GAME_X+145
		MAIN_START_R1_LOOP3_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_R1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+30
				JNZ MAIN_START_R1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+150
			JNZ MAIN_START_R1_LOOP3_BIG
			
		; MIDDLE - OF R
		MOV CX, START_GAME_X+125
		MAIN_START_R1_LOOP4_BIG:
			MOV DX, START_GAME_Y+30
			MAIN_START_R1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+35
				JNZ MAIN_START_R1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+150
			JNZ MAIN_START_R1_LOOP4_BIG
		
		; \ STROKE OF R
		MOV BX, START_GAME_X+125
		MOV DX, START_GAME_Y+35
		MAIN_START_R1_LOOP5_BIG:
			MOV CX, BX
			MOV DI, BX
			ADD DI, 5
			MAIN_START_R1_LOOP5_SML:
				INT 10H
				INC CX
				CMP CX, DI
				JNZ MAIN_START_R1_LOOP5_SML
			INC BX	
			INC DX
			CMP DX, START_GAME_Y+50
			JNZ MAIN_START_R1_LOOP5_BIG

                RET
MAIN_START_R1   ENDP

MAIN_START_T2		PROC	NEAR
		MOV AH, 0CH
		
		; - OF T
		MOV CX, START_GAME_X+40+120
		MAIN_START_T2_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_T2_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_T2_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+70+120
			JNZ MAIN_START_T2_LOOP1_BIG
		
		; | OF T
		MOV CX, START_GAME_X+40+12+120
		MAIN_START_T2_LOOP2_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_T2_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_T2_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+40+18+120
			JNZ MAIN_START_T2_LOOP2_BIG
			
			RET
		
MAIN_START_T2		ENDP

MAIN_START_G1   PROC    NEAR
        MOV AH, 0CH

        ; TOP - OF G
        MOV CX, START_GAME_X+230
		MAIN_START_G1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_G1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_G1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+260
			JNZ MAIN_START_G1_LOOP1_BIG  

        ; LEFT | OF G
        MOV CX, START_GAME_X+230
		MAIN_START_G1_LOOP2_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_G1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_G1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+235
			JNZ MAIN_START_G1_LOOP2_BIG 

        ; BOT - OF G
        MOV CX, START_GAME_X+235
		MAIN_START_G1_LOOP3_BIG:
			MOV DX, START_GAME_Y+45
			MAIN_START_G1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_G1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+260
			JNZ MAIN_START_G1_LOOP3_BIG

        ; RIGHT | OF G
        MOV CX, START_GAME_X+255
		MAIN_START_G1_LOOP4_BIG:
			MOV DX, START_GAME_Y+25
			MAIN_START_G1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_G1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+260
			JNZ MAIN_START_G1_LOOP4_BIG  

        ; MIDDLE - OF G
        MOV CX, START_GAME_X+245
		MAIN_START_G1_LOOP5_BIG:
			MOV DX, START_GAME_Y+25
			MAIN_START_G1_LOOP5_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+30
				JNZ MAIN_START_G1_LOOP5_SML
			INC CX
			CMP CX, START_GAME_X+255
			JNZ MAIN_START_G1_LOOP5_BIG        

        RET
MAIN_START_G1   ENDP

MAIN_START_A2       PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF A
		MOV CX, START_GAME_X+80+190
		MAIN_START_A2_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A2_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_A2_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+85+190
			JNZ MAIN_START_A2_LOOP1_BIG
			
		; RIGHT | OF A
		MOV CX, START_GAME_X+105+190
		MAIN_START_A2_LOOP2_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A2_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_A2_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+110+190
			JNZ MAIN_START_A2_LOOP2_BIG
			
		; TOP - OF A
		MOV CX, START_GAME_X+85+190
		MAIN_START_A2_LOOP3_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_A2_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_A2_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+85+20+190
			JNZ MAIN_START_A2_LOOP3_BIG
			
		; BOT - OF A
		MOV CX, START_GAME_X+85+190
		MAIN_START_A2_LOOP4_BIG:
			MOV DX, START_GAME_Y+30
			MAIN_START_A2_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+35
				JNZ MAIN_START_A2_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+85+20+190
			JNZ MAIN_START_A2_LOOP4_BIG

                    RET
MAIN_START_A2       ENDP

MAIN_START_M1   PROC    NEAR
        MOV AH, 0CH
		        
        ; LEFT | OF M
		MOV CX, START_GAME_X+310
		MAIN_START_M1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_M1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_M1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+315
			JNZ MAIN_START_M1_LOOP1_BIG

        ; RIGHT | OF M
		MOV CX, START_GAME_X+335
		MAIN_START_M1_LOOP2_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_M1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_M1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+340
			JNZ MAIN_START_M1_LOOP2_BIG

        ; MIDDLE | OF M
		MOV CX, START_GAME_X+323
		MAIN_START_M1_LOOP3_BIG:
			MOV DX, START_GAME_Y+5
			MAIN_START_M1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_M1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+327
			JNZ MAIN_START_M1_LOOP3_BIG

        ; TOP - OF M
		MOV CX, START_GAME_X+315
		MAIN_START_M1_LOOP4_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_M1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_M1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+335
			JNZ MAIN_START_M1_LOOP4_BIG

        RET
MAIN_START_M1   ENDP

MAIN_START_E1   PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF E
		MOV CX, START_GAME_X+350
		MAIN_START_E1_LOOP1_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_E1_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_E1_LOOP1_SML
			INC CX
			CMP CX, START_GAME_X+355
			JNZ MAIN_START_E1_LOOP1_BIG
			
		; TOP - OF E
		MOV CX, START_GAME_X+355
		MAIN_START_E1_LOOP2_BIG:
			MOV DX, START_GAME_Y
			MAIN_START_E1_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+5
				JNZ MAIN_START_E1_LOOP2_SML
			INC CX
			CMP CX, START_GAME_X+380
			JNZ MAIN_START_E1_LOOP2_BIG
			
		; MIDDLE - OF E
		MOV CX, START_GAME_X+355
		MAIN_START_E1_LOOP3_BIG:
			MOV DX, START_GAME_Y+22
			MAIN_START_E1_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+28
				JNZ MAIN_START_E1_LOOP3_SML
			INC CX
			CMP CX, START_GAME_X+380
			JNZ MAIN_START_E1_LOOP3_BIG
			
		; BOT - OF E
		MOV CX, START_GAME_X+355
		MAIN_START_E1_LOOP4_BIG:
			MOV DX, START_GAME_Y+45
			MAIN_START_E1_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, START_GAME_Y+50
				JNZ MAIN_START_E1_LOOP4_SML
			INC CX
			CMP CX, START_GAME_X+380
			JNZ MAIN_START_E1_LOOP4_BIG

        RET
MAIN_START_E1   ENDP

MAIN_CHAT_C     PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF C
		MOV CX, MAIN_MENU_CHAT_X
		MAIN_CHAT_C_LOOP1_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_C_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_C_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+5
			JNZ MAIN_CHAT_C_LOOP1_BIG        

        ; TOP - OF C
		MOV CX, MAIN_MENU_CHAT_X+5
		MAIN_CHAT_C_LOOP2_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_C_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+5
				JNZ MAIN_CHAT_C_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+30
			JNZ MAIN_CHAT_C_LOOP2_BIG

        ; BOT - OF C
		MOV CX, MAIN_MENU_CHAT_X+5
		MAIN_CHAT_C_LOOP3_BIG:
			MOV DX, MAIN_MENU_CHAT_Y+45
			MAIN_CHAT_C_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_C_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+30
			JNZ MAIN_CHAT_C_LOOP3_BIG

        RET
MAIN_CHAT_C     ENDP

MAIN_CHAT_H     PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF H
		MOV CX, MAIN_MENU_CHAT_X+40
		MAIN_CHAT_H_LOOP1_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_H_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_H_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+45
			JNZ MAIN_CHAT_H_LOOP1_BIG  

        ; RIGHT | OF H
		MOV CX, MAIN_MENU_CHAT_X+65
		MAIN_CHAT_H_LOOP2_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_H_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_H_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+70
			JNZ MAIN_CHAT_H_LOOP2_BIG  

        ; MIDDLE - OF H
		MOV CX, MAIN_MENU_CHAT_X+45
		MAIN_CHAT_H_LOOP3_BIG:
			MOV DX, MAIN_MENU_CHAT_Y+22
			MAIN_CHAT_H_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+28
				JNZ MAIN_CHAT_H_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+65
			JNZ MAIN_CHAT_H_LOOP3_BIG  

        RET
MAIN_CHAT_H     ENDP

MAIN_CHAT_A       PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF A
		MOV CX, MAIN_MENU_CHAT_X+80
		MAIN_CHAT_A_LOOP1_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_A_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_A_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+85
			JNZ MAIN_CHAT_A_LOOP1_BIG
			
		; RIGHT | OF A
		MOV CX, MAIN_MENU_CHAT_X+105
		MAIN_CHAT_A_LOOP2_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_A_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_A_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+110
			JNZ MAIN_CHAT_A_LOOP2_BIG
			
		; TOP - OF A
		MOV CX, MAIN_MENU_CHAT_X+85
		MAIN_CHAT_A_LOOP3_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_A_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+5
				JNZ MAIN_CHAT_A_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+105
			JNZ MAIN_CHAT_A_LOOP3_BIG
			
		; BOT - OF A
		MOV CX, MAIN_MENU_CHAT_X+85
		MAIN_CHAT_A_LOOP4_BIG:
			MOV DX, MAIN_MENU_CHAT_Y+30
			MAIN_CHAT_A_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+35
				JNZ MAIN_CHAT_A_LOOP4_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+105
			JNZ MAIN_CHAT_A_LOOP4_BIG

                    RET
MAIN_CHAT_A       ENDP

MAIN_CHAT_T		PROC	NEAR
		MOV AH, 0CH
		
		; - OF T
		MOV CX, MAIN_MENU_CHAT_X+115
		MAIN_CHAT_T_LOOP1_BIG:
			MOV DX, MAIN_MENU_CHAT_Y
			MAIN_CHAT_T_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+5
				JNZ MAIN_CHAT_T_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+145
			JNZ MAIN_CHAT_T_LOOP1_BIG
		
		; | OF T
		MOV CX, MAIN_MENU_CHAT_X+115+12
		MAIN_CHAT_T_LOOP2_BIG:
			MOV DX, MAIN_MENU_CHAT_Y+5
			MAIN_CHAT_T_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_CHAT_Y+50
				JNZ MAIN_CHAT_T_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_CHAT_X+115+18
			JNZ MAIN_CHAT_T_LOOP2_BIG
			
			RET
		
MAIN_CHAT_T		ENDP

MAIN_QUIT_Q     PROC    NEAR
        MOV AH, 0CH
		
		; LEFT | OF Q
		MOV CX, MAIN_MENU_QUIT_X
		MAIN_QUIT_Q_LOOP1_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_Q_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_Q_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+5
			JNZ MAIN_QUIT_Q_LOOP1_BIG

        ; TOP - OF Q
		MOV CX, MAIN_MENU_QUIT_X+5
		MAIN_QUIT_Q_LOOP2_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_Q_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+5
				JNZ MAIN_QUIT_Q_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+30
			JNZ MAIN_QUIT_Q_LOOP2_BIG

        ; RIGHT | OF Q
		MOV CX, MAIN_MENU_QUIT_X+25
		MAIN_QUIT_Q_LOOP3_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+5
			MAIN_QUIT_Q_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_Q_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+30
			JNZ MAIN_QUIT_Q_LOOP3_BIG

        ; BOT - OF Q
		MOV CX, MAIN_MENU_QUIT_X+5
		MAIN_QUIT_Q_LOOP4_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+45
			MAIN_QUIT_Q_LOOP4_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_Q_LOOP4_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+25
			JNZ MAIN_QUIT_Q_LOOP4_BIG

        ; BOT STROKE OF Q
		MOV BX, MAIN_MENU_QUIT_X+12
		MOV DX, MAIN_MENU_QUIT_Y+50
		MAIN_QUIT_Q_LOOP5_BIG:
			MOV CX, BX
			MOV DI, BX
			ADD DI, 5
			MAIN_QUIT_Q_LOOP5_SML:
				INT 10H
				INC CX
				CMP CX, DI
				JNZ MAIN_QUIT_Q_LOOP5_SML
			INC BX	
			INC DX
			CMP DX, MAIN_MENU_QUIT_Y+50+10
			JNZ MAIN_QUIT_Q_LOOP5_BIG

        RET
MAIN_QUIT_Q     ENDP

MAIN_QUIT_U     PROC    NEAR
        MOV AH, 0CH

        ; LEFT | OF U
		MOV CX, MAIN_MENU_QUIT_X+40
		MAIN_QUIT_U_LOOP1_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_U_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_U_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+5+40
			JNZ MAIN_QUIT_U_LOOP1_BIG

        ; RIGHT | OF U
		MOV CX, MAIN_MENU_QUIT_X+25+40
		MAIN_QUIT_U_LOOP2_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_U_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_U_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+30+40
			JNZ MAIN_QUIT_U_LOOP2_BIG

        ; BOT - OF U
		MOV CX, MAIN_MENU_QUIT_X+5+40
		MAIN_QUIT_U_LOOP3_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+45
			MAIN_QUIT_U_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_U_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+25+40
			JNZ MAIN_QUIT_U_LOOP3_BIG

        RET
MAIN_QUIT_U     ENDP

MAIN_QUIT_I     PROC    NEAR
        MOV AH, 0CH

        ; | OF I
		MOV CX, MAIN_MENU_QUIT_X+80+12
		MAIN_QUIT_I_LOOP1_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+5
			MAIN_QUIT_I_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+45
				JNZ MAIN_QUIT_I_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+80+18
			JNZ MAIN_QUIT_I_LOOP1_BIG

        ; TOP - OF I
		MOV CX, MAIN_MENU_QUIT_X+80
		MAIN_QUIT_I_LOOP2_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_I_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+5
				JNZ MAIN_QUIT_I_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+80+30
			JNZ MAIN_QUIT_I_LOOP2_BIG

        ; BOT - OF I
		MOV CX, MAIN_MENU_QUIT_X+80
		MAIN_QUIT_I_LOOP3_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+45
			MAIN_QUIT_I_LOOP3_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_I_LOOP3_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+80+30
			JNZ MAIN_QUIT_I_LOOP3_BIG

        RET
MAIN_QUIT_I     ENDP

MAIN_QUIT_T     PROC    NEAR
        MOV AH, 0CH

        ; | OF T
		MOV CX, MAIN_MENU_QUIT_X+120+12
		MAIN_QUIT_T_LOOP1_BIG:
			MOV DX, MAIN_MENU_QUIT_Y+5
			MAIN_QUIT_T_LOOP1_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+50
				JNZ MAIN_QUIT_T_LOOP1_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+120+18
			JNZ MAIN_QUIT_T_LOOP1_BIG

        ; TOP - OF T
		MOV CX, MAIN_MENU_QUIT_X+120
		MAIN_QUIT_T_LOOP2_BIG:
			MOV DX, MAIN_MENU_QUIT_Y
			MAIN_QUIT_T_LOOP2_SML:
				INT 10H
				INC DX
				CMP DX, MAIN_MENU_QUIT_Y+5
				JNZ MAIN_QUIT_T_LOOP2_SML
			INC CX
			CMP CX, MAIN_MENU_QUIT_X+120+30
			JNZ MAIN_QUIT_T_LOOP2_BIG

        RET
MAIN_QUIT_T     ENDP

END